#!/usr/bin/env bash

function task_mirrors {
  echo -e "${cyan}Switching to german update server${reset}"
  sudo sed -i 's/us\.archive\.ubuntu\.com/de.archive.ubuntu.com/' /etc/apt/sources.list
}

function task_install {
  echo -e "${cyan}Installing packages and apps${reset}"
  # add third party ppas
  # atom editor
  sudo add-apt-repository -y ppa:webupd8team/atom
  # diodon clipboard manager
  sudo add-apt-repository -y ppa:diodon-team/stable

  # indicator keylock
  sudo add-apt-repository -y ppa:tsbarnes/indicator-keylock

  # update
  sudo apt-get update

  # upgrade
  sudo apt-get -y upgrade
  sudo apt-get -y dist-upgrade

  # install packages
  sudo apt-get -y install atom \
    htop \
    git \
    unity-tweak-tool \
    guake \
    dconf-editor \
    compizconfig-settings-manager \
    gksu \
    vim \
    gparted \
    openjdk-8-jdk \
    chromium-browser \
    # nautilus-terminal \
    gcolor2 \
    inkscape \
    diodon \
    meld \
    nautilus-compare \
    thunderbird \
    pandoc \
    indicator-keylock \
    nautilus-dropbox \
    python-pip \
    libwww-dict-leo-org-perl \
    gnome-tweak-tool \
    ppa-purge \
    synaptic

  # clean up installed packages
  sudo apt-get -y autoremove
}

# download and install webstorm
function task_webstorm {
  echo -e "${cyan}Installing webstorm${reset}"
  if [ ! -d "/opt/webstorm" ]; then

    wget -O data/webstorm.tar.gz "https://download.jetbrains.com/webstorm/WebStorm-2016.1.3.tar.gz"
    tar -xzvf data/webstorm.tar.gz --directory data/
    mv data/WebStorm-* data/webstorm
    sudo cp -r data/webstorm /opt/webstorm
    rm -rf data/webstorm*
    sudo chown -R $USER:$USER /opt/webstorm
    /opt/webstorm/bin/webstorm.sh &
  fi
}

function task_git {
  echo -e "${cyan}Initial git config${reset}"
  git config --global user.name "Umut TopuzoÄŸlu"
  git config --global user.email "uloco@schiefewelt.de"
  git config --global push.default simple
  git config --global credential.helper cache
  git config --global svn.rmdir true
}

# set up diodon key binding
function task_diodon {
  echo -e "${cyan}Setting up diodon shortcut CTRL+SUPER+V${reset}"
  gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Diodon Clipboard Manager'
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command '/usr/bin/diodon'
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<Primary><Super>v'
}


# add startup applications: diodon guake
function task_autostart {
  echo -e "${cyan}Adding apps to autostart${reset}"
  if [ ! -d "$HOME/.config/autostart/" ]; then
    mkdir "$HOME/.config/autostart/"
  fi
  cp data/autostart/* "$HOME/.config/autostart/"
}

# middle mouse click with three fingers
function task_middleClick {
  if synclient &>/dev/null && ! grep 'synclient TapButton3=2' "$HOME/.bashrc" &>/dev/null; then
    echo -e "${cyan}Touchpad detected, adding middle click on 3 finger tap.${reset}"
    echo "synclient TapButton3=2" >> $HOME/.bashrc
    source "$HOME/.bashrc"
  fi
}

function task_npm {
  # get nvm and set up npm
  echo -e "${cyan}Setting up nvm, nodeJS and npm${reset}"
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash
  source $HOME/.bashrc
  nvm install stable
  nvm alias default stable
  nvm use stable

  npm install -g \
    npm \
    babel-cli \
    bower \
    cordova \
    esformatter \
    eslint \
    eslint-config-angular \
    eslint-config-google \
    eslint-plugin-angular \
    flow-bin \
    grunt-cli \
    gulp \
    http-server \
    ionic \
    jsdoc \
    karma-cli \
    live-server \
    ungit
}

# install font source code pro

function task_fonts {
echo -e "${cyan}Installing missing fonts.${reset}"
  if [ ! -d "$HOME/.fonts" ]; then
    mkdir ~/.fonts
  fi
  tar -xzvf data/source-code-pro.tar.gz
  cp -f source-code-pro/* ~/.fonts
  fc-cache -f -v
  rm -r source-code-pro/

  gsettings set org.gnome.desktop.interface monospace-font-name 'Source Code Pro Medium 11'
}

function task_folders {
  echo -e "${cyan}Creating default folders${reset}"
  mkdir -pv "$HOME/Source/github"
  mkdir -pv "$HOME/Source/bitbucket"
  mkdir -pv "$HOME/Software"
  mkdir -pv "$HOME/Scripts"
  mkdir -pv "$HOME/Screenshots"
  mkdir -pv "$HOME/tmp"
  mkdir -pv "$HOME/Workshops"
  mkdir -pv "$HOME/Virtual Machines"
}

function task_dreymar {
  echo -e "${cyan}Set up dreymars extended keyboard layer ${reset}"

  if ls /usr/share/X11/dbak-* 1> /dev/null 2>&1; then
    echo -e "${purple}  Already installed, skipping.${reset}"
  else
    git clone https://github.com/DreymaR/BigBagKbdTricks_XKB.git
    cd BigBagKbdTricks_XKB
    chmod u+x install-dreymar-xmod.sh
    ./install-dreymar-xmod.sh -o
    gsettings set org.gnome.desktop.input-sources xkb-options "['lv5:caps_switch_lock', 'misc:extend', 'shift:both_capslock', 'compose:rctrl']"
    cd ..
    rm -rf BigBagKbdTricks_XKB
    # fix issues with f1-f12 media keys, capslock on numbers and space
    cp -f data/extend /usr/share/X11/xkb/symbols/extend

  fi
}

function task_language {
  echo -e "${cyan}Installing missing language packs${reset}"
  sudo apt-get -y install $(check-language-support -l en)
  sudo apt-get -y install $(check-language-support -l de)

  echo -e "${cyan}Setting up locales${reset}"
  sudo cp -f "data/locale" "/etc/default/locale"
}

function task_gsettings {
  echo -e "${cyan}Setting gsettings values${reset}"

  if [ ! -f "/usr/share/applications/jetbrains-webstorm.desktop" ]; then
    echo -e "${red}Webstorm icon not found.${reset}"
    echo -e "${yellow}Please finish webstorm initiaization and then press any key to continue.${reset}"
    read foo
  fi

  gsettings set org.gnome.desktop.input-sources sources "[('xkb','de+nodeadkeys')]"
  gsettings set com.canonical.indicator.datetime show-date true
  gsettings set com.canonical.indicator.datetime show-day true
  gsettings set com.canonical.indicator.datetime show-week-numbers true
  gsettings set com.canonical.indicator.datetime time-format '24-hour'
  gsettings set com.canonical.indicator.datetime timezone-name 'Europe/Berlin Mindelheim'
  gsettings set com.canonical.indicator.messages applications "['thunderbird.desktop']"
  gsettings set com.canonical.Unity integrated-menus true
  gsettings set org.compiz.integrated show-hud "['disabled']"
  gsettings set org.freedesktop.ibus.general engines-order "['xkb:de:nodeadkeys:ger']"
  gsettings set org.freedesktop.ibus.general preload-engines "['xkb:de:nodeadkeys:ger']"
  gsettings set org.gnome.calculator button-mode 'advanced'
  gsettings set org.gnome.desktop.session idle-delay 'uint32 0'
  #gsettings set org.gnome.desktop.lockdown disable-lock-screen true
  gsettings set org.gnome.desktop.notifications application-children "['diodon', 'thunderbird']"
  gsettings set org.gnome.desktop.screensaver lock-enabled false
  gsettings set org.gnome.desktop.screensaver ubuntu-lock-on-suspend true
  gsettings set org.gnome.desktop.wm.keybindings maximize "['<Primary><Super>Up']"
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down "['<Control><Alt><Super>Down']"
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left "['<Control><Alt><Super>Left']"
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right "['<Control><Alt><Super>Right']"
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up "['<Control><Alt><Super>Up']"
  gsettings set org.gnome.desktop.wm.keybindings show-desktop "['<Super>d']"
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down "['<Alt><Super>Down']"
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left "['<Alt><Super>Left']"
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right "['<Alt><Super>Right']"
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up "['<Alt><Super>Up']"
  gsettings set org.gnome.desktop.wm.keybindings toggle-shaded "['']"
  gsettings set org.gnome.desktop.wm.preferences mouse-button-modifier '<Super>'
  gsettings set org.gnome.gnome-screenshot auto-save-directory "'file://$HOME/Pictures/Screenshots'"
  gsettings set org.gnome.nautilus.preferences default-folder-viewer 'list-view'
  gsettings set org.gnome.nautilus.preferences executable-text-activation 'ask'
  gsettings set org.gnome.seahorse.manager keyrings-selected "['secret-service://login', 'gnupg://']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys calculator '<Super>asciicircum'
  gsettings set com.canonical.Unity.Launcher favorites "['unity://expo-icon', 'unity://devices', 'application://firefox.desktop', 'application://chromium-browser.desktop', 'application://org.gnome.Nautilus.desktop', 'application://gnome-terminal.desktop', 'application://atom.desktop', 'application://jetbrains-webstorm.desktop', 'application://inkscape.desktop', 'application://gcolor2.desktop', 'application://gnome-system-monitor.desktop', 'unity://running-apps']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys terminal '<Super>r'
}

function task_dconf {
  echo -e "${cyan}Setting dconf settings${reset}"
  dconf write /org/compiz/profiles/unity/plugins/core/vsize 2
  dconf write /org/compiz/profiles/unity/plugins/core/hsize 2
  dconf write /org/compiz/profiles/unity/plugins/unityshell/launcher-minimize-window true
  dconf write /org/gnome/desktop/wm/preferences/action-middle-click-titlebar "'none'"
  dconf write /org/gtk/settings/file-chooser/show-hidden true
  dconf write /org/gnome/nautilus/list-view/use-tree-view true
  dconf write /com/canonical/indicator/power/show-time true
  dconf write /com/canonical/indicator/power/show-percentage true
}

function task_cursor {
  echo -e "${cyan}Installing custom x-cursor theme 'numix'${reset}"
  git clone https://github.com/uloco/numix-cursor.git
  if [[ ! -d "$HOME/.icons" ]]; then
    mkdir "$HOME/.icons"
  fi
  if [[ ! -d "$HOME/.icons/Numix-Cursor" ]]; then
    cp -rv numix-cursor/theme/Numix-Cursor "$HOME/.icons/Numix-Cursor"
  fi
  gsettings set org.gnome.desktop.interface cursor-theme "Numix-Cursor"
  rm -rf numix-cursor/

}

function task_hardcodefixer {
  echo -e "${cyan}Fixing hardcoded desktop icons${reset}"
  git clone https://github.com/Foggalong/hardcode-fixer.git
  cd hardcode-fixer
  sudo ./fix.sh
  cd ..
  rm -rf hardcode-fixer

  # fix webstorm
  sudo sed -i "/^Icon/c\Icon=webstorm" /usr/share/applications/jetbrains-webstorm.desktop
}

function task_themeing {
  # numix
  sudo add-apt-repository -y ppa:numix/ppa
  sudo apt-get update

  sudo apt-get install -y numix-gtk-theme \
    numix-icon-theme-circle

  gsettings set org.gnome.desktop.wm.preferences theme 'Numix'
  gsettings set org.gnome.desktop.interface gtk-theme 'Numix'
  gsettings set org.gnome.desktop.interface icon-theme 'Numix-Circle'

  task_hardcodefixer
  task_cursor
}

# install android sdk
function task_android {

  # perhaps this is enough
  echo -e "${cyan}Installing android${reset}"

  sudo apt-get install -y android-sdk

  # download android sdk
  # $CURRENT_DIR=$(pwd);

  # wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz

  # tar -xvf android-sdk_r24.4.1-linux.tgz
  # cd android-sdk-linux/tools

  # # install all sdk packages
  # ./android update sdk --no-ui

  # # set path
  # $HOME/.bashrc >> export PATH=${PATH}:$HOME/sdk/android-sdk-linux/platform-tools:$HOME/sdk/android-sdk-linux/tools:$HOME/sdk/android-sdk-linux/build-tools/22.0.1/
  # source "$HOME/.bashrc"

  # # adb
  # sudo apt-get install libc6:i386 libstdc++6:i386
  # # aapt
  # sudo apt-get install zlib1g:i386

  # cd "$CURRENT_DIR";
}

function task_terminal {
  echo -e "${cyan}Setting up terminal colors and prompt${reset}"

  git clone --depth=1 https://github.com/Bash-it/bash-it.git "$HOME/.bash_it"
  echo 'y' | "$HOME/.bash_it/install.sh"

  source "$HOME/.bashrc"

  bash-it enable alias git
  cp -r data/powerline-nice "$HOME/.bash_it/themes/"

  sed -i "/^export BASH_IT_THEME/c\export BASH_IT_THEME=\'powerline-nice\'" "$HOME/.bashrc"
}

function task_alternatives {
  sudo sed -i 's/gedit.desktop/atom.desktop/g' /etc/gnome/defaults.list
}
